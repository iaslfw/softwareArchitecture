/*
 * Moderne Software Architekturen - 5x5-Labyrinth-API
 * API f√ºr das 5x5-Labyrinth-Spiel mit RESTful Endpunkten von Sebastian Wolf Mart.Nr 6771635
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.PositionDto;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * WallDto
 */
@JsonPropertyOrder({
  WallDto.JSON_PROPERTY_POSITION1,
  WallDto.JSON_PROPERTY_POSITION2
})
@JsonTypeName("Wall")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-05-24T10:47:41.163385+02:00[Europe/Berlin]", comments = "Generator version: 7.10.0")
public class WallDto {
  public static final String JSON_PROPERTY_POSITION1 = "position1";
  @jakarta.annotation.Nonnull
  private PositionDto position1;

  public static final String JSON_PROPERTY_POSITION2 = "position2";
  @jakarta.annotation.Nonnull
  private PositionDto position2;

  public WallDto() {
  }

  public WallDto position1(@jakarta.annotation.Nonnull PositionDto position1) {
    
    this.position1 = position1;
    return this;
  }

  /**
   * Erste Position der Wand
   * @return position1
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_POSITION1)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public PositionDto getPosition1() {
    return position1;
  }


  @JsonProperty(JSON_PROPERTY_POSITION1)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPosition1(@jakarta.annotation.Nonnull PositionDto position1) {
    this.position1 = position1;
  }

  public WallDto position2(@jakarta.annotation.Nonnull PositionDto position2) {
    
    this.position2 = position2;
    return this;
  }

  /**
   * Zweite Position der Wand
   * @return position2
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_POSITION2)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public PositionDto getPosition2() {
    return position2;
  }


  @JsonProperty(JSON_PROPERTY_POSITION2)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPosition2(@jakarta.annotation.Nonnull PositionDto position2) {
    this.position2 = position2;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WallDto wall = (WallDto) o;
    return Objects.equals(this.position1, wall.position1) &&
        Objects.equals(this.position2, wall.position2);
  }

  @Override
  public int hashCode() {
    return Objects.hash(position1, position2);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WallDto {\n");
    sb.append("    position1: ").append(toIndentedString(position1)).append("\n");
    sb.append("    position2: ").append(toIndentedString(position2)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

