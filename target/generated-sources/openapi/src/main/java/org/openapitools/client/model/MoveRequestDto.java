/*
 * Moderne Software Architekturen - 5x5-Labyrinth-API
 * API f√ºr das 5x5-Labyrinth-Spiel mit RESTful Endpunkten von Sebastian Wolf Mart.Nr 6771635
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * MoveRequestDto
 */
@JsonPropertyOrder({
  MoveRequestDto.JSON_PROPERTY_DIRECTION
})
@JsonTypeName("MoveRequest")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-25T14:09:25.383233+02:00[Europe/Berlin]", comments = "Generator version: 7.10.0")
public class MoveRequestDto {
  /**
   * Richtung, in die sich der Spieler bewegen soll
   */
  public enum DirectionEnum {
    LINKS(String.valueOf("links")),
    
    RECHTS(String.valueOf("rechts")),
    
    OBEN(String.valueOf("oben")),
    
    UNTEN(String.valueOf("unten"));

    private String value;

    DirectionEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static DirectionEnum fromValue(String value) {
      for (DirectionEnum b : DirectionEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_DIRECTION = "direction";
  @jakarta.annotation.Nonnull
  private DirectionEnum direction;

  public MoveRequestDto() {
  }

  public MoveRequestDto direction(@jakarta.annotation.Nonnull DirectionEnum direction) {
    
    this.direction = direction;
    return this;
  }

  /**
   * Richtung, in die sich der Spieler bewegen soll
   * @return direction
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DIRECTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public DirectionEnum getDirection() {
    return direction;
  }


  @JsonProperty(JSON_PROPERTY_DIRECTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDirection(@jakarta.annotation.Nonnull DirectionEnum direction) {
    this.direction = direction;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MoveRequestDto moveRequest = (MoveRequestDto) o;
    return Objects.equals(this.direction, moveRequest.direction);
  }

  @Override
  public int hashCode() {
    return Objects.hash(direction);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MoveRequestDto {\n");
    sb.append("    direction: ").append(toIndentedString(direction)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

